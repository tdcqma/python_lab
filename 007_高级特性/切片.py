# 取一个list或者是tuple的一部分元素是很常见的事情，例如一个list如下所示：
L = ['Michael','sarah','bob','tom','jack']
# 取前3个元素怎么作，本办法是：
print(L[0],L[1],L[2])
# 如果数量特别打就没办法用上面这种本办法了。
# 好的办法是：取前N个元素，也就是索引为0 -（N-1）的元素，可以用循环
L = ['Michael','sarah','bob','tom','jack']
r = []
n = 3
for i in range(n):
    r.append(L[i])
print(r)

#对这种经常取指定索引范围的操作，用循环十分繁琐，因此，Python提供了切片（Slice）操作符，能大大简化这种操作。
# 对应上面的问题，取前3个元素，用一行代码就可以完成切片：
print(L[0:3])
# 上面的索引位置0：3表示索引位置是0，1，2的三个元素，并不包括索引位置是3的元素。
# 如果第一个索引开始的位置是0的话，那么0还可以省略，即：
print('去掉索引位置为0开始：',L[:3])
# 也可以从索引为1的位置开始，取出2个元素
print(L[1:3])
# 因为python支持L[-1]取出倒数第一个元素,那么就可以用于倒数切片
print('倒数切片：',L[-2:])
# 记住，倒数第一个元素的索引是-1
print(L[-2:-1])
# 切片操作十分有用。我们先创建一个0-99的数列：
L = list(range(100))
print('创建0-99的数列：',L)
# 可以通过切片轻松的取出某一段数列，列入取出前10的元素
print('用切片取出前10个元素：',L[:10])
print('用切片取出后10个元素：',L[-10:])
print('用切片取出10-20个元素：',L[11:20])
print('前10个数每两个取出1个：',L[:10:2])
print('所有的数：',L[::])
print('所有的数，每5个取出一个：',L[::5])

# tuple也是一种list，唯一的区别就是tuple是不可变的。
T = (0,1,2,3,4,5)
print('tuple数列切片：',T[:3])

# 字符串也可以看作是一个list，每个字符就是一个元素
print('ABCDefg'[:3])
